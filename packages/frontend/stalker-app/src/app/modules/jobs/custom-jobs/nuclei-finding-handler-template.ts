export const nucleiFindingHandlerTemplate = [
  'from nuclei_finding import NucleiFinding',
  'from nuclei_wrapper import JobInput',
  'from stalker_job_sdk import log_info',
  '',
  '',
  'class FindingHandler:',
  '    """Custom parser template to get you started. The parse_finding and publish_findings methods are required."""',
  '',
  '    def __init__(self):',
  '        log_info("Initializing the custom handler")',
  '',
  '    def parse_finding(self, finding_obj: dict, original_string: str, input: JobInput):',
  '        """This method returns a NucleiFinding, but it can return any object."""',
  '        return NucleiFinding(finding_obj, original_string=original_string, input=input)',
  '',
  '    def publish_findings(self, findings: list):',
  '        """This method receives all the findings given by the parse_finding method as a list."""',
  '        log_info("TODO: Publish findings")',
  '        for finding in findings:',
  '            log_info(finding.template_id)',
  '',
  '"""',
  'class NucleiFinding:',
  '    template_id: str = None',
  '    name: str = None',
  "    tags: 'list[str]' = None",
  '    severity: str = None',
  '    type: str = None',
  '    port: int = None',
  '    scheme: str = None',
  '    url: str = None',
  '    matched_at: str = None',
  "    extracted_results: 'list[str]' = None",
  '    ip: str = None',
  '    domain: str = None',
  '    timestamp: str = None',
  '    curl_command: str = None',
  '    description: str = None',
  '    original_string: str = None',
  '    matcher_name: str = None',
  '    matcher_status: bool = None',
  '    original_path: str = None',
  '    endpoint: str = None',
  '    ssl: bool = None',
  '    path: str = None',
  '',
  'class JobInput:',
  '  target_ip: str',
  '  port: int',
  '  domain: str',
  '  path: str',
  '  ssl: str',
  '  endpoint: str',
  '"""',
].join('\n');
