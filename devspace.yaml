version: v2beta1
name: stalker

vars:
  STALKER_ENVIRONMENT: dev

imports:
  - path: devspace.base.yaml
  - path: devspace.dev.yaml
    enabled: $(is_equal ${STALKER_ENVIRONMENT} "dev")

pipelines:
  build:
    run: build_images flow-manager jobs-handler jqh

  deploy:
    run: |-
      build_images flow-manager jobs-handler jqh
      create_deployments jqh mongo flow-manager jobs-handler --sequential

  dev:
    run: |-
      build_images flow-manager jobs-handler jqh
      create_deployments jqh mongo flow-manager jobs-handler --sequential
      start_dev --all

  purge:
    run: |-
      stop_dev --all
      purge_deployments jqh mongo flow-manager jobs-handler --sequential

images:
  flow-manager:
    image: flow_manager
    dockerfile: flow_manager/Dockerfile.dev
    context: flow_manager
    rebuildStrategy: default

  jobs-handler:
    image: jobs_handler
    dockerfile: jobs_handler/Dockerfile.dev
    context: jobs_handler
    rebuildStrategy: default

  jqh:
    image: jobs_queue_handler
    dockerfile: jobs_queue_handler/Dockerfile
    context: jobs_queue_handler
    rebuildStrategy: default

deployments:
  flow-manager:
    helm:
      values:
        containers:
          - env:
              - name: API_KEY
                value: ${FM_API_KEY}
              - name: JQH_ADDRESS
                value: ${JQH_ADDRESS}
              - name: JQH_API_KEY
                value: ${JQH_API_KEY}
              - name: MONGO_ADDRESS
                value: ${FM_MONGO_ADDRESS}
              - name: FM_JWT_SECRET
                value: ${FM_JWT_SECRET}
              - name: FM_REFRESH_SECRET
                value: ${FM_REFRESH_SECRET}

            image: flow_manager
            name: flow-manager-container

        service:
          ports:
            - containerPort: 3000
              port: 3000
              protocol: TCP
            - containerPort: 3001
              name: debugging
              port: 3001
              protocol: TCP

  jobs-handler:
    helm:
      values:
        containers:
          - env:
              - name: FM_API_KEY
                value: ${FM_API_KEY}
              - name: JQH_API_KEY
                value: ${JQH_API_KEY}
            image: jobs_handler
            name: jobs-handler-container
  jqh:
    helm:
      values:
        containers:
          - env:
              - name: JQH_API_KEY
                value: ${JQH_API_KEY}
              - name: FLASK_ENV
                value: development
            image: jobs_queue_handler
            name: jqh-container

        service:
          ports:
            - containerPort: 5000
              port: 5000
              protocol: TCP
  mongo:
    helm:
      values:
        containers:
          - image: bitnami/mongodb:5.0.9
            name: mongo-container

        service:
          ports:
            - containerPort: 27017
              port: 27017
              protocol: TCP
dev:
  jhq:
    labelSelector:
      app.kubernetes.io/component: jqh
    container: jqh-container
    sync:
      - path: ./jobs_queue_handler:/jqh
    restartHelper:
      inject: false
    ports:
      - port: "5000"

  mongo:
    labelSelector:
      app.kubernetes.io/component: mongo
    ports:
      - port: "27017"

  flow-manager:
    labelSelector:
      app.kubernetes.io/component: flow-manager
    container: flow-manager-container
    sync:
      - path: ./flow_manager/src/:/app/src/
    restartHelper:
      inject: false
    ports:
      - port: "3000"

  jobs-handler:
    labelSelector:
      app.kubernetes.io/component: jobs-handler
    container: jobs-handler-container
    sync:
      - path: ./jobs_handler/src/:/jh
    restartHelper:
      inject: false

hooks:
  - events:
      - after:deploy:jqh
    wait:
      running: true
      terminatedWithCode: 0
    container:
      labelSelector:
        app.kubernetes.io/component: jqh
      containerName: jqh-container
  - events:
      - after:deploy:mongo
    wait:
      running: true
      terminatedWithCode: 0
    container:
      labelSelector:
        app.kubernetes.io/component: mongo
      containerName: mongo-container
  - events:
      - after:deploy:flow-manager
    wait:
      running: true
      terminatedWithCode: 0
    container:
      labelSelector:
        app.kubernetes.io/component: flow-manager
      containerName: flow-manager-container
  - events:
      - after:deploy:jobs-handler
    wait:
      running: true
      terminatedWithCode: 0
    container:
      labelSelector:
        app.kubernetes.io/component: jobs-handler
      containerName: jobs-handler-container
