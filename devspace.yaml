version: v1beta11

# `images` specifies all images that may need to be built for this project
images:
  flow_manager:
    image: flow_manager
    dockerfile: flow_manager/Dockerfile.dev
    context: flow_manager
  jobs_handler:
    image: jobs_handler
    dockerfile: jobs_handler/Dockerfile.dev
    context: jobs_handler
  jqh:
    image: jobs_queue_handler
    dockerfile: jobs_queue_handler/Dockerfile
    context: jobs_queue_handler

# `deployments` tells DevSpace how to deploy this project
deployments:
  - name: jqh
    helm:
      componentChart: true
      values:
        containers:
          - env:
              - name: API_KEY
                value: "123456"
              - name: FLASK_ENV
                value: development

            image: jobs_queue_handler
            name: jqh-container
        service:
          ports:
            - containerPort: 5000
              port: 5000
              protocol: TCP

  - name: mongo
    helm:
      componentChart: true
      values:
        containers:
          - image: bitnami/mongodb:5.0.9
            name: mongo-container
        service:
          ports:
            - containerPort: 27017
              port: 27017
              protocol: TCP

  - name: flow-manager
    helm:
      componentChart: true
      values:
        containers:
          - env:
              - name: API_KEY
                value: "123456"
              - name: JQH_ADDRESS
                value: http://jqh:5000
              - name: JQH_API_KEY
                value: "123456"
              - name: KB_CHANNELID
                value: "NOT_SET"
              - name: KB_PAPERKEY
                value: "NOT_SET"
              - name: KB_USERNAME
                value: "NOT_SET"
              - name: MONGO_ADDRESS
                value: mongodb://mongo:27017/stalker
            image: flow_manager
            name: flow-manager-container
        service:
          ports:
            - containerPort: 3000
              port: 3000
              protocol: TCP

  - name: jobs-handler
    # This deployment uses `helm` but you can also define `kubectl` deployments or kustomizations
    helm:
      # We are deploying the so-called Component Chart: https://devspace.sh/component-chart/docs
      componentChart: true
      # Under `values` we can define the values for this Helm chart used during `helm install/upgrade`
      # You may also use `valuesFiles` to load values from files, e.g. valuesFiles: ["values.yaml"]
      values:
        containers:
          - env:
              - name: FM_API_KEY
                value: "123456"
              - name: JQH_API_KEY
                value: "123456"
              - name: JQH_API_KEY
                value: "123456"
            image: jobs_handler
            name: jobs-handler-container

# `dev` only applies when you run `devspace dev`
dev:
  # `dev.ports` specifies all ports that should be forwarded while `devspace dev` is running
  # Port-forwarding lets you access your application via localhost on your local machine
  ports:
    - labelSelector:
        app.kubernetes.io/component: jqh
      forward:
        - port: 5000
    - labelSelector:
        app.kubernetes.io/component: mongo
      forward:
        - port: 27017
    - labelSelector:
        app.kubernetes.io/component: flow-manager
      forward:
        - port: 3000

  # `dev.sync` configures a file sync between our Pods in k8s and your local project files
  sync:
    - labelSelector:
        app.kubernetes.io/component: flow-manager
      containerName: flow-manager-container
      localSubPath: ./flow_manager/src/
      containerPath: /app/src/

    - labelSelector:
        app.kubernetes.io/component: jobs-handler
      containerName: jobs-handler-container
      localSubPath: ./jobs_handler/src/
      containerPath: /jh

    - labelSelector:
        app.kubernetes.io/component: jqh
      containerName: jqh-container
      localSubPath: ./jobs_queue_handler
      containerPath: /jqh

hooks:
  - events:
      - after:deploy:jqh
    wait:
      running: true
      terminatedWithCode: 0
    container:
      labelSelector:
        app.kubernetes.io/component: jqh
      containerName: jqh-container

  - events:
      - after:deploy:mongo
    wait:
      running: true
      terminatedWithCode: 0
    container:
      labelSelector:
        app.kubernetes.io/component: mongo
      containerName: mongo-container

  - events:
      - after:deploy:flow-manager
    wait:
      running: true
      terminatedWithCode: 0
    container:
      labelSelector:
        app.kubernetes.io/component: flow-manager
      containerName: flow-manager-container

  - events:
      - after:deploy:jobs-handler
    wait:
      running: true
      terminatedWithCode: 0
    container:
      labelSelector:
        app.kubernetes.io/component: jobs-handler
      containerName: jobs-handler-container

  # - events:
  #     - after:deploy:flow-manager
  #   upload:
  #     localPath: ./flow_manager/src/
  #     containerPath: /fm/src/
  #   container:
  #     labelSelector:
  #       app.kubernetes.io/component: flow_manager
  #     containerName: upload-volumes

  # - events:
  #     - after:deploy:flow-manager
  #   command: touch /tmp/done
  #   container:
  #     labelSelector:
  #       app.kubernetes.io/component: flow_manager
  #     containerName: upload-volumes

  # - events:
  #     - after:deploy:flow-manager
  #   wait:
  #     running: true
  #     terminatedWithCode: 0
  #   container:
  #     labelSelector:
  #       app.kubernetes.io/component: flow-manager
  #     containerName: flow-manager-container

  # - events:
  #     - after:deploy:jobs-handler
  #   upload:
  #     localPath: ./jobs_handler/src/
  #     containerPath: /jh/src/
  #   container:
  #     labelSelector:
  #       app.kubernetes.io/component: jobs_handler
  #     containerName: upload-volumes

  # - events:
  #     - after:deploy:jobs-handler
  #   command: touch /tmp/done
  #   container:
  #     labelSelector:
  #       app.kubernetes.io/component: jobs_handler
  #     containerName: upload-volumes

  # - events:
  #     - after:deploy:jobs-handler
  #   upload:
  #     localPath: ./jobs_handler/src/
  #     containerPath: /jh/src/
  #   container:
  #     labelSelector:
  #       app.kubernetes.io/component: jobs_handler
  #     containerName: upload-volumes

  # - events:
  #     - after:deploy:jobs-handler
  #   command: touch /tmp/done
  #   container:
  #     labelSelector:
  #       app.kubernetes.io/component: jobs_handler
  #     containerName: upload-volumes
