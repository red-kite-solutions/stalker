name: Build, Tag & Push

on:
  workflow_call:
    inputs:
      release-type:
        required: true
        type: string
        description: Release type (none, patch, minor, major)

      tag-prefix:
        required: true
        type: string
        description: Prefix used to tag the release in git

      dockerfile-path:
        required: true
        type: string
        description: Path to the Dockerfile

      docker-context:
        default: ./
        type: string
        description: "Path of the Docker build context"

      image-name:
        required: true
        type: string
        description: Release type (none, patch, minor, major)

permissions:
  packages: write
  contents: write

jobs:
  run:
    name: Run
    runs-on: ubuntu-latest
    if: inputs.release-type != 'none'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get sha
        id: release-sha
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Bump version and push tag
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          commit_sha: ${{ steps.release-sha.outputs.sha }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: ${{ inputs.release-type }}
          tag_prefix: "${{inputs.tag-prefix}}/v"

          # This rule will never occur; always use the default bump
          custom_release_rules: "will-never-occur:minor"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Release ${{ steps.tag-version.outputs.new_version }}"
          generate_release_notes: true
          tag_name: ${{ steps.tag-version.outputs.new_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{inputs.image-name}}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=semver,pattern={{version}},value=${{steps.tag-version.outputs.new_version}}
            type=semver,pattern={{major}}.{{minor}},value=${{steps.tag-version.outputs.new_version}}
            type=semver,pattern={{major}},value=${{steps.tag-version.outputs.new_version}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ${{inputs.docker-context}}
          file: ${{inputs.dockerfile-path}}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
