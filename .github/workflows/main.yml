# This is a basic workflow to help you get started with Actions

name: Red Kite

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    name: E2E Tests
    # The type of runner that the job will run on
    runs-on: Linux
    timeout-minutes: 30

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup MiniKube
        id: minikube
        uses: medyagh/setup-minikube@master
        with:
          memory: max
          cpus: max

      - name: Install DevSpace
        uses: loft-sh/setup-devspace@main
        with:
          kubectl-install: true

      - name: Create namespace
        run: kubectl create namespace stalker

      - name: Make room in the container
        run: |-
          rm -rf /opt/hostedtoolcache/CodeQL
          rm -rf /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk
          rm -rf /opt/hostedtoolcache/PyPy
          rm -rf /opt/hostedtoolcache/Python
          rm -rf /opt/hostedtoolcache/Ruby
          rm -rf /opt/hostedtoolcache/go
          rm -rf /opt/hostedtoolcache/node

      - name: Build test containers
        run: devspace -p e2e --var="RK_ENVIRONMENT=tests" run-pipeline build -n stalker

      - name: Deploy test containers
        run: devspace -p e2e run-pipeline --var="RK_ENVIRONMENT=tests" jobs-manager-e2e-cicd-deploy -n stalker

      - name: Run tests
        run: devspace -p e2e --var="RK_ENVIRONMENT=tests" run-pipeline jobs-manager-e2e-cicd-run -n stalker

      - name: Diagnosis
        if: always()
        run: |-
          kubectl get all -n stalker
          kubectl describe all -n stalker

      - name: Jobs Manager Logs
        if: always()
        run: kubectl logs -n stalker -l app.kubernetes.io/component=jobs-manager

      - name: Diagnosis
        if: always()
        run: |-
          kubectl get all -n stalker
          kubectl describe all -n stalker

      - name: Kafka logs
        if: always()
        run: |-
          kubectl logs -n stalker kafka-controller-0
